{"version":3,"sources":["img/logoBurger.png","views/welcome.js","firebase-config.js","components/Products.jsx","components/Order.jsx","views/waiter.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","Welcome","className","src","logo","alt","id","to","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Products","addProductAtOrder","useState","arr","setOrder","type","setType","useEffect","firestore","collection","where","get","then","querySnapshot","array","forEach","doc","push","data","catch","error","console","log","onClick","map","product","key","nombre","precio","url","React","Order","products","cantidad","deleteRow","name","setName","placeholder","value","onChange","e","target","colSpan","min","max","defaultValue","p","acum","Total","Waiter","selectProduct","found","find","undefined","newArr","disable","prodId","cant","arrNew","element","newArray","filter","ele","Boolean","window","location","hostname","match","ReactDOM","render","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed73f257.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoBurger.eda230cd.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../img/logoBurger.png\";\r\nimport '../css/App.css';\r\n\r\nexport const Welcome = () => {\r\n  return (\r\n    <div className=\"App-header\">\r\n      {/* <header className=\"App-header\"> */}\r\n        {/* <h1 className=\"App-link\">Bienvenidos</h1> */}\r\n        <img src={logo} alt=\"imagen de product\" className=\"Burger-logo\" />\r\n        <button className=\"Button-mesero\" id=\"ingresar\"><Link to=\"/waiter\"> Mesero </Link></button>\r\n      {/* </header> */}\r\n    </div>\r\n  )\r\n}\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig= {\r\n      // Your web app's Firebase configuration\r\n    apiKey: \"AIzaSyCRUjRxgsnGbdWJrpP7UVHFeS0JEzM2Jw0\",\r\n    authDomain: \"burger-queen-6ff61.firebaseapp.com\",\r\n    databaseURL: \"https://burger-queen-6ff61.firebaseio.com\",\r\n    projectId: \"burger-queen-6ff61\",\r\n    storageBucket: \"burger-queen-6ff61.appspot.com\",\r\n    messagingSenderId: \"494430091091\",\r\n    appId: \"1:494430091091:web:6b21175389312bf33713a6\",\r\n    measurementId: \"G-0K0FDC86YR\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;","import React, { useState, useEffect } from \"react\";\r\nimport firebase from '../firebase-config';\r\nimport '../css/App.css';\r\n\r\nexport const Products = ({ addProductAtOrder }) => {\r\n  const [arr, setOrder] = useState([]);\r\n  const [type, setType] = useState('desayuno');\r\n\r\n  useEffect(() => {\r\n    firebase.firestore().collection(\"products\").where(\"tipo\", \"==\", type)\r\n      .get()\r\n      .then(querySnapshot => {\r\n        const array = [];\r\n        querySnapshot.forEach(doc => {\r\n          array.push({ id: doc.id, ...doc.data() });\r\n\r\n        });\r\n        setOrder(array);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error getting documents: \", error);\r\n      });\r\n  }, [type])\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={() => setType(\"desayuno\")}> Desayuno </button>\r\n        <button onClick={() => setType(\"almuerzo_cena\")}> Almuerzo y cena </button>\r\n      </div>\r\n      <div className=\"Scroll\">\r\n        {arr.map(product => {\r\n          return (\r\n            <div key={product.id} onClick={() => addProductAtOrder(product)}>\r\n              <p>{product.nombre}</p>\r\n              <p>{product.precio}</p>\r\n              <img src={product.url} alt={\"imagen de product\"} className=\"Width-product \" />\r\n            </div>)\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"../css/App.css\";\r\n\r\nconst { useState } = React;\r\n\r\nexport const Order = ({ products, cantidad, deleteRow }) => {\r\n  const [name, setName] = useState('');\r\n\r\n  const functionName = (e) => {\r\n    setName(e.target.value);\r\n    console.log(e.target.value);\r\n  }\r\n  const Total = (arr) => {\r\n    let acum = 0;\r\n    arr.map(p => acum += p.precio * p.cantidad);\r\n    return acum;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input placeholder=\"Nombre\" value={name} onChange={functionName} />\r\n      <input placeholder=\"N° de Mesa\"></input>\r\n      {/* <p>DETALLE DE PEDIDO</p> */}\r\n      <table>\r\n\r\n        <thead>\r\n          <tr>\r\n            <th colSpan=\"4\" >DETALLE DE PEDIDO</th>\r\n          </tr>\r\n          <tr>\r\n            <td>CANT.</td>\r\n            <td>DESCRIPCIÓN</td>\r\n            <td>PU</td>\r\n            <td>SUBTOTAL</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map(product => (\r\n            <tr key={product.id}>\r\n              <td><input type=\"number\" min=\"1\" max=\"100\" defaultValue={product.cantidad} onClick={(e) => {\r\n                const p = e.target.value;\r\n                cantidad(product.id, p)\r\n              }} /></td>\r\n              <td>{product.nombre}</td>\r\n              <td>{product.precio}</td>\r\n              <td>{product.precio * product.cantidad}</td>\r\n              <td><input type=\"image\" alt=\"eliminar\" src=\"https://img.icons8.com/windows/64/000000/xbox-x.png\"\r\n              onClick={() => { deleteRow(product)}}/>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <p>TOTAL = {Total(products)}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport logo from \"../img/logoBurger.png\";\r\nimport { Products } from '../components/Products';\r\nimport { Order } from '../components/Order';\r\nimport \"../css/App.css\";\r\n\r\nexport const Waiter = () => {\r\n  const [selectProduct, setOrder] = useState([]);\r\n\r\n  const incrementar = (prodId, cant) => {\r\n    const arrNew = selectProduct.map(element => {\r\n      if (prodId === element.id) {\r\n        element.cantidad = cant;\r\n      }\r\n      return element;\r\n    })\r\n    setOrder(arrNew);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"Flex-header\">\r\n        {/* <h2> Burger Queen </h2> */}\r\n        <img src={logo} alt=\"imagen de product\" className=\"Burger-log\" />\r\n      </header>\r\n      <main>\r\n        <section className=\"Flex\">\r\n          <Products addProductAtOrder={(product) => {\r\n            const found = selectProduct.find(p => {\r\n              return p.id === product.id\r\n            });\r\n\r\n            if (found !== undefined) {\r\n              const newArr = selectProduct.map(p => {\r\n                if (found.id === p.id) {\r\n                  // p.cantidad = p.cantidad + 1;\r\n                  p.disable = true;\r\n                }\r\n                return p;\r\n              })\r\n              setOrder(newArr);\r\n            } else {\r\n              setOrder([...selectProduct, { ...product, cantidad: 1 }])\r\n            }\r\n          }} />\r\n          <Order products={selectProduct} cantidad={incrementar} deleteRow={(element) => {\r\n            const newArray = selectProduct.filter(ele => {\r\n              return element.id !== ele.id;\r\n            })\r\n            setOrder(newArray)\r\n          }} />\r\n        </section>\r\n      </main>\r\n    </div>\r\n  )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport { Welcome } from './views/welcome.js';\r\nimport { Waiter } from './views/waiter.js';\r\n\r\nimport './css/App.css';\r\n\r\nexport const App = () => {\r\n  return(\r\n    <Router>\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/waiter\">\r\n            <Waiter />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Welcome />\r\n          </Route>\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\n"],"sourceRoot":""}